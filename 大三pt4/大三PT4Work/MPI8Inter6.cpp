#include "pt4.h"
#include "mpi.h"

void Solve()
{
    Task("MPI8Inter6");

    int flag;
    MPI_Initialized(&flag);
    if (flag == 0)
        return;

    int rank, size;
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);

    double a, b;  
    pt >> a;

     MPI_Comm c1, c2, c3, c4;  // ??4????????????????
    MPI_Group g1, g2, g3;     // ??3??
    MPI_Comm_dup(MPI_COMM_WORLD, &c1); // ??MPI_COMM_WORLD????c1????????
    MPI_Comm_group(MPI_COMM_WORLD, &g1); // ?MPI_COMM_WORLD??????????????g1?
    MPI_Status stat;  // ??????

    int ranks1[] = {0, size / 2 - 1, 1}; // ??????????????0?size/2-1????1
    int ranks2[] = {size / 2, size - 1, 1}; // ??????????????size/2?size-1????1

    // ?????
    MPI_Group_range_incl(g1, 1, &ranks1, &g2); // ??ranks1???????g1?????g2
    MPI_Group_range_incl(g1, 1, &ranks2, &g3); // ??ranks2???????g1?????g3

    if (rank < size / 2) 
        MPI_Comm_create(MPI_COMM_WORLD, g2, &c2); 
    else
        MPI_Comm_create(MPI_COMM_WORLD, g3, &c2); 

    int lr;  
    MPI_Comm_rank(c2, &lr); // ???????????c2?? rank?????lr?
    pt << lr; 

    // ???????
    int l = (rank < size / 2) ? size / 2 : 0;  // ??????????leader????????leader?size/2???????leader?0
    MPI_Intercomm_create(c2, 0, c1, l, 100, &c3); // ???????c3?????????

    // ?????????
    int col = (rank % 2 == 0) ? 0 : 1;  // ????rank????????????????
    if (rank < size / 2) // ???????????????
        MPI_Comm_split(c3, col, rank, &c4); // ???????????????rank?????c3???????c4
    else
        MPI_Comm_split(c3, col, size - rank, &c4); // ???????????? rank ??????????c3???c4

    int nr;  
    MPI_Comm_rank(c4, &nr); // ??????????c4?? rank?????nr?
    pt << nr; 

    MPI_Send(&a, 1, MPI_DOUBLE, nr, 0, c4); // ???a??????c4? rank ?nr?????????0
    MPI_Recv(&b, 1, MPI_DOUBLE, nr, 0, c4, &stat); // ????c4? rank ?nr?????????????b?
    pt << b; 

}
